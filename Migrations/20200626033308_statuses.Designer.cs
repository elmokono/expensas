// <auto-generated />
using System;
using ExpensasAbbinatura.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExpensasAbbinatura.Migrations
{
    [DbContext(typeof(ExpensasContext))]
    [Migration("20200626033308_statuses")]
    partial class statuses
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ExpensasAbbinatura.Models.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("text");

                    b.HasKey("BuildingId");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("ExpensasAbbinatura.Models.Concept", b =>
                {
                    b.Property<int>("ConceptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ConceptTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasKey("ConceptId");

                    b.HasIndex("ConceptTypeId");

                    b.ToTable("Concepts");
                });

            modelBuilder.Entity("ExpensasAbbinatura.Models.ConceptType", b =>
                {
                    b.Property<int>("ConceptTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasKey("ConceptTypeId");

                    b.ToTable("ConceptTypes");
                });

            modelBuilder.Entity("ExpensasAbbinatura.Models.Installment", b =>
                {
                    b.Property<int>("InstallmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("StatusInstallmentStatusId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("When")
                        .HasColumnType("datetime");

                    b.HasKey("InstallmentId");

                    b.HasIndex("PersonId");

                    b.HasIndex("StatusInstallmentStatusId");

                    b.ToTable("Installments");
                });

            modelBuilder.Entity("ExpensasAbbinatura.Models.InstallmentConcept", b =>
                {
                    b.Property<int>("InstallmentConceptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<int?>("ConceptId")
                        .HasColumnType("int");

                    b.Property<int?>("InstallmentId")
                        .HasColumnType("int");

                    b.HasKey("InstallmentConceptId");

                    b.HasIndex("ConceptId");

                    b.HasIndex("InstallmentId");

                    b.ToTable("InstallmentConcepts");
                });

            modelBuilder.Entity("ExpensasAbbinatura.Models.InstallmentStatus", b =>
                {
                    b.Property<string>("InstallmentStatusId")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasKey("InstallmentStatusId");

                    b.ToTable("InstallmentStatus");
                });

            modelBuilder.Entity("ExpensasAbbinatura.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BuildingId")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("RoleCode")
                        .HasColumnType("text");

                    b.HasKey("PersonId");

                    b.HasIndex("BuildingId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("ExpensasAbbinatura.Models.Concept", b =>
                {
                    b.HasOne("ExpensasAbbinatura.Models.ConceptType", "ConceptType")
                        .WithMany()
                        .HasForeignKey("ConceptTypeId");
                });

            modelBuilder.Entity("ExpensasAbbinatura.Models.Installment", b =>
                {
                    b.HasOne("ExpensasAbbinatura.Models.Person", "Person")
                        .WithMany("Installments")
                        .HasForeignKey("PersonId");

                    b.HasOne("ExpensasAbbinatura.Models.InstallmentStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusInstallmentStatusId");
                });

            modelBuilder.Entity("ExpensasAbbinatura.Models.InstallmentConcept", b =>
                {
                    b.HasOne("ExpensasAbbinatura.Models.Concept", "Concept")
                        .WithMany()
                        .HasForeignKey("ConceptId");

                    b.HasOne("ExpensasAbbinatura.Models.Installment", null)
                        .WithMany("InstallmentConcepts")
                        .HasForeignKey("InstallmentId");
                });

            modelBuilder.Entity("ExpensasAbbinatura.Models.Person", b =>
                {
                    b.HasOne("ExpensasAbbinatura.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId");
                });
#pragma warning restore 612, 618
        }
    }
}
